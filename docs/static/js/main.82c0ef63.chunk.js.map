{"version":3,"sources":["components/Hero.js","contents/Classes.js","contents/Examples.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Hero","className","src","alt","data-target","id","style","padding","Classes","subtitle","Examples","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"8MAuEeA,MArEf,WACI,OACI,0BAASC,UAAU,4BAAnB,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,cAAb,SACE,qBAAKC,IAAI,+CAA+CC,IAAI,WAE9D,uBAAMF,UAAU,gBAAgBG,cAAY,kBAA5C,UACE,yBACA,yBACA,+BAIJ,qBAAKC,GAAG,kBAAkBJ,UAAU,cAApC,SACE,sBAAKA,UAAU,aAAf,UACE,mBAAGA,UAAU,wBAAb,kBAGA,mBAAGA,UAAU,cAAb,sBAGA,mBAAGA,UAAU,cAAb,2BAGA,sBAAMA,UAAU,cAAhB,SACE,oBAAGA,UAAU,gCAAb,UACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,oBAEf,6DASd,qBAAKA,UAAU,YAAYK,MAAO,CAACC,QAAS,eAA5C,SACE,sBAAKN,UAAU,8BAAf,UACE,oBAAIA,UAAU,QAAd,oBAGA,oBAAIA,UAAU,WAAd,2BAOJ,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,+BACE,oBAAIA,UAAU,YAAd,SAA0B,2CAC1B,6BAAI,yCACJ,6BAAI,uD,OC7CPO,MAbf,WACE,OACI,cAAC,UAAD,UACE,eAAC,YAAD,WACE,cAAC,UAAD,sBACA,eAAC,UAAD,CAASC,UAAQ,EAAjB,yDAC8C,8CAD9C,oDCQKC,MAbf,WACE,OACI,cAAC,UAAD,UACE,eAAC,YAAD,WACE,cAAC,UAAD,uBACA,eAAC,UAAD,CAASD,UAAQ,EAAjB,yDAC8C,8CAD9C,oDCOKE,MAVf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBb,MAAK,SAACc,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,YE3G5BtB,M","file":"static/js/main.82c0ef63.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Hero() {\n    return (\n        <section className=\"hero is-primary is-medium\">\n          <div className=\"hero-head\">\n            <nav className=\"navbar\">\n              <div className=\"container\">\n                <div className=\"navbar-brand\">\n                  <a className=\"navbar-item\">\n                    <img src=\"https://bulma.io/images/bulma-type-white.png\" alt=\"Logo\" />\n                  </a>\n                  <span className=\"navbar-burger\" data-target=\"navbarMenuHeroA\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                  </span>\n                </div>\n\n                <div id=\"navbarMenuHeroA\" className=\"navbar-menu\">\n                  <div className=\"navbar-end\">\n                    <a className=\"navbar-item is-active\">\n                      Home\n                    </a>\n                    <a className=\"navbar-item\">\n                      Examples\n                    </a>\n                    <a className=\"navbar-item\">\n                      Documentation\n                    </a>\n                    <span className=\"navbar-item\">\n                      <a className=\"button is-primary is-inverted\">\n                        <span className=\"icon\">\n                          <i className=\"fab fa-github\"></i>\n                        </span>\n                        <span>Download</span>\n                      </a>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </nav>\n          </div>\n\n          <div className=\"hero-body\" style={{padding: '3rem 1.5rem'}}>\n            <div className=\"container has-text-centered\">\n              <h1 className=\"title\">\n                D3.Svg\n              </h1>\n              <h2 className=\"subtitle\">\n                Subtitle\n              </h2>\n            </div>\n          </div>\n\n\n          <div className=\"hero-foot\">\n            <nav className=\"tabs\">\n              <div className=\"container\">\n                <ul>\n                  <li className=\"is-active\"><a>Overview</a></li>\n                  <li><a>Exampe</a></li>\n                  <li><a>Classes</a></li>\n                </ul>\n              </div>\n            </nav>\n          </div>\n        </section>\n    );\n}\n\nexport default Hero;\n","import React from 'react';\n\nimport { Section, Container, Heading } from 'react-bulma-components';\n\nfunction Classes() {\n  return (\n      <Section>\n        <Container>\n          <Heading>Classes</Heading>\n          <Heading subtitle>\n            A simple container to divide your page into <strong>sections</strong>, like the one you are currently reading\n          </Heading>\n        </Container>\n      </Section>\n  );\n}\n\nexport default Classes;\n","import React from 'react';\n\nimport { Section, Container, Heading } from 'react-bulma-components';\n\nfunction Examples() {\n  return (\n      <Section>\n        <Container>\n          <Heading>Examples</Heading>\n          <Heading subtitle>\n            A simple container to divide your page into <strong>sections</strong>, like the one you are currently reading\n          </Heading>\n        </Container>\n      </Section>\n  );\n}\n\nexport default Examples;\n","import React from 'react';\n\nimport Hero from './components/Hero.js';\nimport Classes from './contents/Classes.js';\nimport Examples from './contents/Examples.js';\n\nfunction App() {\n  return (\n    <>\n      <Hero />\n      <Classes />\n      <Examples />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport './index.css';\n\nimport App from './App';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}